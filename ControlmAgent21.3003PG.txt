bash-4.4$ cat ControlmAgent21.3003PG.ksh
#!/usr/bin/ksh 

###########################################################
# INFO : SCRIPT D'EXPLOITATION CONTROL-M
# POUR : CREDIT AGRICOLE
# PAR  : KARL NIEL
###########################################################
# 2021.07.19 : K. NIEL, Creation
# 2023 07 13 : K. NIEL - Update ProductVersion 9.0.20.200
# 2025 10 02 : Migration script updated to ProductVersion 9.0.21.300
###########################################################

# VARIABLE GLOBAL
###########################################################

export PATH=/bin:/usr/bin:/usr/sbin:/tools/admin/bin

# ==========================================================
# EXPLICATION GLOBALE :
# Ce script est un wrapper d'exploitation pour installer, mettre à jour,
# démarrer, arrêter ou désinstaller des composants Control-M Agent
# sur AIX et Linux. Il utilise la variable ProductVersion pour pointer
# vers les binaires dans ${Repository}/V${ProductVersion}.
# Les opérations d'installation réelles sont déléguées aux scripts présents
# dans le repository (LinuxInstall/, AixInstall/, V<version>/AGENT/...).
# ==========================================================

ProductVersion="V9.0.21.200"
Repository="/softwares/PRODUITS/CONTROLM"
OS=$1
OPT=$2
Envir=$3
OSuname=$(uname)
OSlevel=$(oslevel)

#- Fonctions -##############################################

function Envir
{
case $Envir in
              HP|PR) ;;
                  *) echo "Parametre Envir invalide : $4"
                     echo "Autorisation pour : HP|PR"
                     echo "Abandon..."
                     exit 1 ;;
esac
}
# EXPL: Vérifie que le paramètre d'environnement (${Envir}) est valide. Accepte 'HP' ou 'PR'. En cas d'erreur, le script s'arrête.


function nimmount
{
    echo "-> Montage du serveur NIM"

    /tools/admin/bin/mountnim
}
# EXPL: Monte le serveur NIM en appelant /tools/admin/bin/mountnim. Utilisé avant les installations qui lisent des binaires depuis le serveur NIM.


function nimunmount
{
    echo "-> Demontage du serveur NIM"

    /tools/admin/bin/umountnim
}
# EXPL: Démontage du serveur NIM via /tools/admin/bin/umountnim. À appeler après les opérations nécessitant le NIM.


# GESTION AIX
###########################################################

function installaixstandalone
{
    echo "-> Installation en de Control-M en mode standalone sur AIX"

    export PATH=$PATH:$HOME/bin:/tools/admin/local/bin:/tools/admin/bin:/tools/admin/san:/usr/local/bin:/sbin
    ${Repository}/AixInstall/Install_Aix_CTMAGT.ksh -e ${Envir}
}
# EXPL: Lance le script d'installation AIX en mode standalone (Install_Aix_CTMAGT.ksh) depuis le repository. Ne réalise pas de vérifications profondes : délègue au script d'installation.


function installaixclusteractif
{
    echo "-> Installation en de Control-M en mode cluster actif sur AIX"

    export PATH=$PATH:$HOME/bin:/tools/admin/local/bin:/tools/admin/bin:/tools/admin/san:/usr/local/bin:/sbin
    ${Repository}/AixInstall/Install_Aix_CTMAGT_Cluster_ACTIF.ksh -e ${Envir}
}
# EXPL: Lance le script d'installation AIX pour un cluster actif. Idem : délégation au script du repository.


function installaixclusterpassif
{
    echo "-> Installation en de Dollaruniverse en mode cluster passif sur AIX"

    export PATH=$PATH:$HOME/bin:/tools/admin/local/bin:/tools/admin/bin:/tools/admin/san:/usr/local/bin:/sbin
    ${Repository}/AixInstall/Install_Aix_CTMAGT_Cluster_PASSIF.ksh -e ${Envir}
}
# EXPL: Lance le script 2'installation AIX pour un cluster passif.


function upgradeagentaix
{
    echo "-> Ugrade Control-M Agent AIX with last version on tools repository: ${ProductVersion}"
    export PATH=$PATH:$HOME/bin:/tools/admin/local/bin:/tools/admin/bin:/tools/admin/san:/usr/local/bin:/sbin
    cd /tools/list/ctmagent/ctmagt
    # ${Repository}/V${ProductVersion}/AGENT/AIX/setup.sh
    cd /tools/list/ctmagent/ctmagt
    gtar -xzf ${Repository}/${ProductVersion}/DRFZ4.9.0.21.200_AIX.z
    /tools/list/ctmagent/ctmagt/setup.sh -BMC_INST_JAVA_HOME /tools/list/ctmagent/java

}
# EXPL: Met à niveau l'agent Control-M sur AIX en exécutant le setup.sh de ${Repository}/V${ProductVersion}/AGENT/AIX. Se place dans /tools/list/ctmagent/ctmagt avant d'exécuter.

function StartctmagtAix
{
    echo "-> Start Control-M Agent AIX"
    /tools/list/ctmagent/ctmagt/ctm/scripts/start-ag -u ctmagt -p all
    chmod 644 /tools/list/ctmagent/ctmagt/ctm/proclog/start_ag*
    chmod -R 755 /tools/list/ctmagent/ctmagt/ctm/proclog/LogsZip
    chmod -R 755 /tools/list/ctmagent/ctmagt/ctm/proclog/Metrics
}
# EXPL: Démarre l'agent Control-M sur AIX via le script start-ag (utilisateur 'ctmagt') et ajuste les permissions des logs.


function StopctmagtAix
{
    echo "-> Stop Control-M Agent AIX"
    /tools/list/ctmagent/ctmagt/ctm/scripts/shut-ag -u ctmagt -p all
}
# EXPL: Arrête l'agent Control-M sur AIX via shut-ag.


function uninstallCTMAix
{
    echo "-> desinstallation de Control-M sur AIX"

    export PATH=$PATH:$HOME/bin:/tools/admin/local/bin:/tools/admin/bin:/tools/admin/san:/usr/local/bin:/sbin
    ${Repository}/AixInstall/CTMuninstall.ksh
}
# EXPL: Lance le script de désinstallation AIX stocké dans ${Repository}/AixInstall/CTMuninstall.ksh.


# GESTION LINUX
###########################################################

function installlinuxstandalone
{
    echo "-> Installation en de Control-M en mode standalone sur LINUX"
    export PATH=$PATH:$HOME/bin:/tools/admin/local/bin:/tools/admin/bin:/tools/admin/san:/usr/local/bin:/sbin
    ${Repository}/LinuxInstall/Install_Linux_CTMAGT.ksh -e ${Envir}
}
# EXPL: Lance le script d'installation Linux (Install_Linux_CTMAGT.ksh) pour un agent standalone.


function upgradeagentlinux
{
    echo "-> Ugrade Control-M Agent LINUX with last version on tools repository: ${ProductVersion}"
    export PATH=$PATH:$HOME/bin:/tools/admin/local/bin:/tools/admin/bin:/tools/admin/san:/usr/local/bin:/sbin
    cd /tools/list/ctmagent/ctmagt
    ${Repository}/V${ProductVersion}/AGENT/Linux/setup.sh
}
# EXPL: Met à niveau l'agent Control-M sur Linux en exécutant le setup.sh de ${Repository}/V${ProductVersion}/AGENT/Linux après s'être placé dans /tools/list/ctmagent/ctmagt.


function uninstallCTMLinux
{
    echo "-> desinstallation de Control-M sur LINUX"
    export PATH=$PATH:$HOME/bin:/tools/admin/local/bin:/tools/admin/bin:/tools/admin/san:/usr/local/bin:/sbin
    ${Repository}/LinuxInstall/CTMuninstall.ksh
}
# EXPL: Lance le script de désinstallation Linux (CTMuninstall.ksh) depuis le repository.


function StartctmagtLinux
{
   CheckVersion=$(oslevel | cut -c 1)
   if [[ ${CheckVersion} < 7 ]] ; then
    echo "-> Start Control-M Agent LINUX without use systemctl..."
    /tools/list/ctmagent/ctmagt/ctm/scripts/start-ag -u ctmagt -p all
   else
    echo "-> Start Control-M Agent LINUX with systemctl..."
    systemctl start ctmagent.service
   fi
   chmod 644 /tools/list/ctmagent/ctmagt/ctm/proclog/start_ag*
   chmod -R 755 /tools/list/ctmagent/ctmagt/ctm/proclog/LogsZip
   chmod -R 755 /tools/list/ctmagent/ctmagt/ctm/proclog/Metrics
}
# EXPL: Démarre l'agent Control-M sur Linux. Utilise systemctl si l'OS est 'systemd' (RHEL7+), sinon lance le script start-ag. Ajuste aussi les permissions des logs.


function StopctmagtLinux
{
   CheckVersion=$(oslevel | cut -c 1)
   if [[ ${CheckVersion} < 7 ]] ; then
    echo "-> Stop Control-M Agent LINUX without use systemctl..."
    /tools/list/ctmagent/ctmagt/ctm/scripts/shut-ag -u ctmagt -p all
   else
    echo "-> Stop Control-M Agent LINUX with systemctl..."
    systemctl stop ctmagent.service
   fi
}
# EXPL: Arrête l'agent Control-M sur Linux (systemctl stop ou script shut-ag selon la version).


function StartctmemLinux
{
   echo "-> Start Control-M EM LINUX with systemctl..."
   systemctl start ctmem.service
}
# EXPL: Démarre le service Control-M EM (ctmem) avec systemctl.


function StopctmemLinux
{
   echo "-> Stop Control-M EM LINUX with systemctl..."
   systemctl stop ctmem.service
}
# EXPL: Arrête le service Control-M EM (ctmem) avec systemctl.


function StartctmserverLinux
{
   echo "-> Start Control-M Server LINUX with systemctl..."
   systemctl start ctmserver.service
}
# EXPL: Démarre le service Control-M Server (ctmserver) avec systemctl.


function StopctmserverLinux
{
   echo "-> Stop Control-M Server LINUX with systemctl..."
   systemctl stop ctmserver.service
}
# EXPL: Arrête le service Control-M Server (ctmserver) avec systemctl.


function StartctmcaLinux
{
   echo "-> Start Control-M Serverr-CA LINUX with systemctl..."
   systemctl start ctmca.service
}
# EXPL: Démarre le service Control-M CA (ctmca) avec systemctl.


function StopctmcaLinux
{
   echo "-> Stop Control-M Server-CA LINUX with systemctl..."
   systemctl stop ctmca.service
}
# EXPL: Arrête le service Control-M CA (ctmca) avec systemctl.


# AUTRE
###########################################################

function usage
{
    clear
    echo
    echo "Usage : exploitcontrolm.ksh [AIX]   [INSTALLSTANDALONE|INSTALLCLUSTERACTIF|INSTALLCLUSTERPASSIF] [HP|PR]"
    echo "                            [LINUX] [INSTALLSTANDALONE]                                          [HP|PR]"
    echo
    echo "                            [AIX]   [UPDGRADEAGENT]"
    echo "                            [LINUX] [UPDGRADEAGENT]"
    echo
    echo "                            [AIX]   [STARTCTMAGTAIX|STOPCTMAGTAIX]"
    echo "                            [LINUX] [STARTCTMAGTLINUX|STOPCTMAGTLINUX]"
    echo
    echo "                            [AIX]   [UNINSTALLCTMAIX]"
    echo "                            [LINUX] [UNINSTALLCTMLINUX]"
    echo
    echo "                            [LINUX] [STARTCTMEM|STOPCTMEM]"
    echo
    echo "                            [LINUX] [STARTCTMSERVER|STOPCTMSERVER]"
    echo "                            [LINUX] [STARTCTMCA|STOPCTMCA]"
    echo
    echo "                            [AUTRE] [MOUNTNIM|UMOUNTNIM"
}
# EXPL: Affiche l'aide d'utilisation du script (syntaxe et options possibles).


case $OS in

    AIX)
        echo "OS         : ${OSuname}"
        echo "OS version : ${OSlevel}"
        echo ${OSuname} | grep -i AIX > /dev/null
        RC=${?}
        if [[ ${RC} != 0 ]] ; then
         echo "################################################"
         echo "ABORTED TOOLS :                                 "
         echo "Selected COMMAND is not for this OS : ${OSuname}"
         echo "################################################"
         exit 1
        fi
        case $OPT in
            INSTALLSTANDALONE)
                Envir
                nimmount
                installaixstandalone
                nimunmount
                ;;
            INSTALLCLUSTERACTIF)
                Envir
                nimmount
                installaixclusteractif
                nimunmount
                ;;
            INSTALLCLUSTERPASSIF)
                Envir
                nimmount
                installaixclusterpassif
                nimunmount
                ;;
            UPDGRADEAGENT)
                nimmount
                upgradeagentaix
                nimunmount
                ;;
            STARTCTMAGTAIX)
                StartctmagtAix
                ;;
            STOPCTMAGTAIX)
                StopctmagtAix
                ;;
            UNINSTALLCTMAIX)
                nimmount
                uninstallCTMAix
                nimunmount
                ;;
            *)
                usage
                ;;
        esac
        ;;


    LINUX)
        echo "OS         : ${OSuname}"
        echo "OS version : ${OSlevel}"
        echo ${OSuname} | grep -i LINUX > /dev/null
        RC=${?}
        if [[ ${RC} != 0 ]] ; then
         echo "################################################"
         echo "ABORTED TOOLS :                                 "
         echo "Selected COMMAND is not for this OS : ${OSuname}"
         echo "################################################"
         exit 1
        fi
        case $OPT in
            INSTALLSTANDALONE)
                Envir
                nimmount
                installlinuxstandalone
                nimunmount
                ;;
            UPDGRADEAGENT)
                nimmount
                upgradeagentlinux
                nimunmount
                ;;
            STARTCTMAGTLINUX)
                StartctmagtLinux
                ;;
            STOPCTMAGTLINUX)
                StopctmagtLinux
                ;;
            UNINSTALLCTMLINUX)
                nimmount
                uninstallCTMLinux
                nimunmount
                ;;
            STARTCTMEM)
                StartctmemLinux
                ;;
            STOPCTMEM)
                StopctmemLinux
                ;;
            STARTCTMSERVER)
                StartctmserverLinux
                ;;
            STOPCTMSERVER)
                StopctmserverLinux
                ;;
            STARTCTMCA)
                StartctmcaLinux
                ;;
            STOPCTMCA)
                StopctmcaLinux
                ;;
            *)
                usage
                ;;
        esac
        ;;


    AUTRE)
        case $OPT in
            MOUNTNIM)
                nimmount
                ;;
            UMOUNTNIM)
                nimunmount
                ;;
            *)
                usage
                ;;
        esac
        ;;


    *)
        usage
        ;;

esac
# ==========================================================
# GRANDES LIGNES:
# - ProductVersion : Définit la version des binaires Control-M à utiliser (ici 9.0.21.300).
# - Repository : Chemin où sont stockés les scripts et binaires d'installation.
# - Les fonctions 'install*' et 'upgrade*' appellent des scripts présents dans le repository.
# - Avant toute installation sur un hôte Linux/AIX, assure-toi que Java 17 est présent
#   (utilise ensure_java_controlm_with_find.ksh fourni séparément).
# - Pour maintenir la compatibilité multi-version, tu peux soit lancer ce script tel quel
#   (fixé à la ProductVersion), soit modifier pour accepter la version en paramètre.
# - Exemples d'utilisation :
#     ./exploitcontrolm.ksh LINUX INSTALLSTANDALONE HP
#     ./exploitcontrolm.ksh LINUX UPDGRADEAGENT
# - Les actions AIX sont similaires mais appellent des scripts AIX dédiés.
# - Attention : ce wrapper suppose que les binaires (V<version>) existent dans le repository
#   et que le montage NIM fonctionne si tu utilises les fonctions nimmount/nimunmount.
# ==========================================================
